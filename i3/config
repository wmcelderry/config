


################
# System setup #
################

set $BROWSER iceweasel
set $BROWSER_WINCLASS Firefox

set $EMAIL icedove
set $EMAIL_WINCLASS Icedove

set $PHONE linphone
set $PHONE_WINCLASS Linphone

set $TERM rxvt
set $PDF zathura


set $CALC rxvt -e bc
set $TEXT rxvt -e vim

set $WORDPROC QT_QPA_PLATFORMTHEME= libreoffice --writer
set $SSHEET QT_QPA_PLATFORMTHEME= libreoffice --calc
set $PRESENT QT_QPA_PLATFORMTHEME= libreoffice --impress

set $SVG inkscape
set $PCB kicad

set $MONITOR_UPDATE /etc/udev/scripts/screen_hotplug.sh
set $MONITOR_OFF /home/will/scripts/screen_off.sh
set $BRIGHTNESS /home/will/scripts/brightness.sh


##################
# General Config #
##################

set $mod Mod4 
focus_follows_mouse no
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

#show_marks yes

bar {
        status_command i3status --config ~/.i3status.conf
}


##################
# Launching Apps #
##################


#make it easy to change the monitor
bindsym $mod+m mode "monitor"
mode "monitor" {
	bindsym Control+u exec /home/will/scripts/usbMonitors.sh 1 ; mode "default"
	bindsym Control+m exec $MONITOR_UPDATE ; mode "default"
	bindsym Control+o exec $MONITOR_OFF ; mode "default"
	bindsym 9 exec $BRIGHTNESS 976 ; mode "default"
	bindsym 7 exec $BRIGHTNESS 500 ; mode "default"
	bindsym 5 exec $BRIGHTNESS 200 ; mode "default"
	bindsym 3 exec $BRIGHTNESS 100 ; mode "default"
	bindsym 2 exec $BRIGHTNESS 50 ; mode "default"
	bindsym 1 exec $BRIGHTNESS 20 ; mode "default"
	bindsym 0 exec $BRIGHTNESS 1 ; mode "default"

	bindsym Escape mode default
	bindsym Return mode default
}


#make it easy to change the sound settings:
bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute
bindsym XF86AudioMute exec amixer -q -D pulse set Master toggle

bindsym $mod+s mode "sound"
mode "sound" {
	bindsym m exec amixer -q -D pulse set Master toggle; mode "default"
	bindsym equal exec amixer -q set Master 2dB+ unmute
	bindsym minus exec amixer -q set Master 2dB- unmute

	bindsym 0 exec amixer -q set Master -M 100% ; mode "default"
	bindsym 9 exec amixer -q set Master -M 90% ; mode "default"
	bindsym 8 exec amixer -q set Master -M 80% ; mode "default"
	bindsym 7 exec amixer -q set Master -M 70% ; mode "default"
	bindsym 6 exec amixer -q set Master -M 60% ; mode "default"
	bindsym 5 exec amixer -q set Master -M 50% ; mode "default"
	bindsym 4 exec amixer -q set Master -M 40% ; mode "default"
	bindsym 3 exec amixer -q set Master -M 30% ; mode "default"
	bindsym 2 exec amixer -q set Master -M 20% ; mode "default"
	bindsym 1 exec amixer -q set Master -M 10% ; mode "default"

# to add: moving sound between alsa cards.

	bindsym Escape mode default
	bindsym Return mode default
}


#make it easy to change config files
bindsym $mod+c mode "config"
mode "config" {
	bindsym r reload
	bindsym w exec $TERM -e /usr/bin/sudo vim /etc/wpa_supplicant/wpa_supplicant.conf; mode "default"
	bindsym s exec $TERM -e /usr/bin/vim /home/will/scripts/setup.sh; mode "default"
	bindsym i exec $TERM -e /usr/bin/vim /home/will/config/i3/config; mode "default"

	bindsym Escape mode default
	bindsym Return mode default
}

#make it easy to reconfigure network in common ways:
bindsym $mod+n mode "net"
mode "net" {
	bindsym n exec $TERM -e /home/will/scripts/renewIP.sh ; mode "default"

	bindsym Escape mode "default"
	bindsym Return mode "default"
}

#make it easy to launch common applications
# easiest of all: terminal
bindsym $mod+Return exec $TERM

bindsym $mod+space mode "launch"
mode "launch" {

	bindsym w exec $BROWSER ; mode "default"
	bindsym e exec $EMAIL ; mode "default"
	bindsym c exec $CALC ; mode "default"
	bindsym p exec $PHONE ; mode "default"
	bindsym t exec $TEXT ; mode "default"
	bindsym f exec $PDF ; mode "default"
	bindsym k exec $PCB ; mode "default"
	bindsym $mod+Return exec $TERM ; mode "default"
	bindsym Return exec $TERM ; mode "default"


	bindsym Shift+w exec $WORDPROC ; mode "default"
	bindsym Shift+s exec $SSHEET ; mode "default"
	bindsym Shift+p exec $PRESENT ; mode "default"
	bindsym i exec $svg ; mode "default"

	bindsym o exec QT_QPA_PLATFORMTHEME= openscad ; mode "default"

	bindsym Shift+d exec dmenu_run
	bindsym d mode "dev"
	bindsym space exec --no-startup-id i3-dmenu-desktop; mode "default"

	bindsym Escape mode default
	bindsym Return mode default
}

mode "dev" {
	bindsym a exec arduino; mode default
	bindsym Escape mode default
	bindsym Return mode default
}
#make it easy to get to quick access configurations & documents
bindsym $mod+q mode "quick"
mode "quick" {

	bindsym t exec $TERM  -e /usr/bin/vim /home/will/todo; mode "default"
	bindsym l exec $TERM  -e /usr/bin/vim /home/will/labbook/$(date +%Y%m%d.txt); mode "default"
	bindsym w exec $TERM  -e /home/will/scripts/work_setup.sh; mode "default"

	bindsym Escape mode default
	bindsym Return mode default
}


#capture a screen shot
# xrandr | grep \\\<connected | awk '{geo=($3=="primary" ? $4 : $3) ; print $1 ": " geo}'

bindsym Print mode "print screen"
mode "print screen"
{
	bindsym 1 exec /home/will/scripts/XCapture.sh "LVDS-1"; mode default
	bindsym 2 exec /home/will/scripts/XCapture.sh "DVI-I-1-1"; mode default
	bindsym 3 exec /home/will/scripts/XCapture.sh "DVI-I-2-2"; mode default
	bindsym Escape mode default
	bindsym Return mode default
}
#exec bash -c 'xwd -root | convert -crop 1920x1200+0+0 - "$HOME/Pictures/Screenshot-$(date +"%y-%m-%d_%H:%M:%S").png" '
bindsym --release Mod1+Print exec bash -c 'xwd -root | convert -crop 1920x1200+1920+0 - "$HOME/Pictures/Screenshot-$(date +"%y-%m-%d_%H:%M:%S").png" '



#################################
# Auto config for starting apps #
#################################
for_window [instance="Mail" class="$EMAIL_WINCLASS"] mark "e"
for_window [instance="Navigator" class="$BROWSER_WINCLASS"] mark "w"
for_window [instance="linphone" class="$PHONE_WINCLASS"] mark "p"


#########
# Admin #
#########

set $cmod Control

bindsym $mod+$cmod+q kill

bindsym $mod+$cmod+r restart
bindsym $mod+$cmod+c reload
bindsym $mod+$cmod+e exit
bindsym $mod+$cmod+p exec "i3-nagbar -t warning -m 'You pressed the power off shortcut. Do you really want to power off this computer?' -b 'Yes, power off!' 'sudo /sbin/poweroff'"
bindsym Mod1+Control+Delete exec "i3-nagbar -t warning -m 'You pressed the reboot shortcut. Do you really want to reboot this computer?' -b 'Yes, reboot NOW!' 'sudo /sbin/reboot'"
bindsym $mod+$cmod+l exec i3lock -c 111111
#lock that looks like the screen is unlocked...
bindsym $mod+$cmod+shift+l exec i3lock -u -p default -i ~/Pictures/i3lockbg.png



##########################
# Focus control & Layout #
##########################


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right


# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

bindsym Mod1+Tab mode "mark"
mode "mark" {
#jump to mark = key
	bindsym 1 [con_mark="1"] focus ; mode "default"
	bindsym 2 [con_mark="2"] focus ; mode "default"
	bindsym 3 [con_mark="3"] focus ; mode "default"
	bindsym 4 [con_mark="4"] focus ; mode "default"
	bindsym 5 [con_mark="5"] focus ; mode "default"
	bindsym 6 [con_mark="6"] focus ; mode "default"
	bindsym 7 [con_mark="7"] focus ; mode "default"
	bindsym 8 [con_mark="8"] focus ; mode "default"
	bindsym 9 [con_mark="9"] focus ; mode "default"
	bindsym 0 [con_mark="0"] focus ; mode "default"
	bindsym a [con_mark="a"] focus ; mode "default"
	bindsym b [con_mark="b"] focus ; mode "default"
	bindsym c [con_mark="c"] focus ; mode "default"
	bindsym d [con_mark="d"] focus ; mode "default"
	bindsym e [con_mark="e"] focus ; mode "default"
	bindsym f [con_mark="f"] focus ; mode "default"
	bindsym g [con_mark="g"] focus ; mode "default"
	bindsym h [con_mark="h"] focus ; mode "default"
	bindsym i [con_mark="i"] focus ; mode "default"
	bindsym j [con_mark="j"] focus ; mode "default"
	bindsym k [con_mark="k"] focus ; mode "default"
	bindsym l [con_mark="l"] focus ; mode "default"
	bindsym m [con_mark="m"] focus ; mode "default"
	bindsym n [con_mark="n"] focus ; mode "default"
	bindsym o [con_mark="o"] focus ; mode "default"
	bindsym p [con_mark="p"] focus ; mode "default"
	bindsym q [con_mark="q"] focus ; mode "default"
	bindsym r [con_mark="r"] focus ; mode "default"
	bindsym s [con_mark="s"] focus ; mode "default"
	bindsym t [con_mark="t"] focus ; mode "default"
	bindsym u [con_mark="u"] focus ; mode "default"
	bindsym v [con_mark="v"] focus ; mode "default"
	bindsym w [con_mark="w"] focus ; mode "default"
	bindsym x [con_mark="x"] focus ; mode "default"
	bindsym y [con_mark="y"] focus ; mode "default"
	bindsym z [con_mark="z"] focus ; mode "default"
	bindsym space	exec i3-input -F '[con_mark="%s"] focus' -P 'Jump to a mark: ' ; mode "default"

#pull marked container = Shift + key
# This is a block of 'pull to workspace' - not using 'move container to workspace current' as doesn't re-order the containers if it is already on the current workspace, so this is more predictable/intuitive!
	bindsym Shift+1 [ con_mark="1"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+2 [ con_mark="2"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+3 [ con_mark="3"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+4 [ con_mark="4"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+5 [ con_mark="5"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+6 [ con_mark="6"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+7 [ con_mark="7"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+8	[ con_mark="8"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+9 [ con_mark="9"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+0 [ con_mark="0"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+a [ con_mark="a"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+b [ con_mark="b"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+c [ con_mark="c"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+d [ con_mark="d"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+e [ con_mark="e"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+f [ con_mark="f"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+g [ con_mark="g"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+h [ con_mark="h"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+i [ con_mark="i"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+j [ con_mark="j"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+k [ con_mark="k"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+l [ con_mark="l"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+m [ con_mark="m"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+n [ con_mark="n"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+o [ con_mark="o"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+p [ con_mark="p"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+q [ con_mark="q"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+r [ con_mark="r"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+s [ con_mark="s"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+t [ con_mark="t"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+u [ con_mark="u"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+v [ con_mark="v"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+w [ con_mark="w"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+x [ con_mark="x"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+y [ con_mark="y"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+z [ con_mark="z"] move scratchpad, scratchpad show, floating toggle ; mode "default"
	bindsym Shift+space	exec i3-input -F '[con_mark="%s"] move scratchpad, scratchpad show, floating toggle' -P 'Pull mark: ' ; mode "default"

#Assign marks = Control + key
	bindsym Control+1 mark "1" ; mode "default"
	bindsym Control+2 mark "2" ; mode "default"
	bindsym Control+3 mark "3" ; mode "default"
	bindsym Control+4 mark "4" ; mode "default"
	bindsym Control+5 mark "5" ; mode "default"
	bindsym Control+6 mark "6" ; mode "default"
	bindsym Control+7 mark "7" ; mode "default"
	bindsym Control+8 mark "8" ; mode "default"
	bindsym Control+9 mark "9" ; mode "default"
	bindsym Control+0 mark "0" ; mode "default"
	bindsym Control+a mark "a" ; mode "default"
	bindsym Control+b mark "b" ; mode "default"
	bindsym Control+c mark "c" ; mode "default"
	bindsym Control+d mark "d" ; mode "default"
	bindsym Control+e mark "e" ; mode "default"
	bindsym Control+f mark "f" ; mode "default"
	bindsym Control+g mark "g" ; mode "default"
	bindsym Control+h mark "h" ; mode "default"
	bindsym Control+i mark "i" ; mode "default"
	bindsym Control+j mark "j" ; mode "default"
	bindsym Control+k mark "k" ; mode "default"
	bindsym Control+l mark "l" ; mode "default"
	bindsym Control+m mark "m" ; mode "default"
	bindsym Control+n mark "n" ; mode "default"
	bindsym Control+o mark "o" ; mode "default"
	bindsym Control+p mark "p" ; mode "default"
	bindsym Control+q mark "q" ; mode "default"
	bindsym Control+r mark "r" ; mode "default"
	bindsym Control+s mark "s" ; mode "default"
	bindsym Control+t mark "t" ; mode "default"
	bindsym Control+u mark "u" ; mode "default"
	bindsym Control+v mark "v" ; mode "default"
	bindsym Control+w mark "w" ; mode "default"
	bindsym Control+x mark "x" ; mode "default"
	bindsym Control+y mark "y" ; mode "default"
	bindsym Control+z mark "z" ; mode "default"
	bindsym Control+space	exec i3-input -F 'mark "%s"' -P 'Assign a mark: ' ; mode "default"

#prototype rotating set... # _1 is the most recently visited.
#likely to be useful for auto assigning to emails and terminals or other pop-up windows?
#NB: --add doesn't work yet in my version, will be coming in future...
	bindsym minus [con_mark="_3"] focus , unmark "_3" , mark --add "_0"; [con_mark="_2"] unmark "_2", mark --add "_3" ; [con_mark="_1"] unmark _1, mark --add "_2" ; [con_mark="_0"] unmark _0, mark --add "_1"
	bindsym Shift+minus [con_mark="_3"] move scratchpad, scratchpad show, floating toggle , unmark "_3" , mark --add "_0"; [con_mark="_2"] unmark "_2", mark --add "_3" ; [con_mark="_1"] unmark _1, mark --add "_2" ; [con_mark="_0"] unmark _0, mark --add "_1";  mode "default"
	bindsym Control+minus mark --add "_1" ;  mode "default"
 
	bindsym Escape mode "default"
	bindsym Return mode "default"

	bindsym Shift+h move left
	bindsym Shift+j move down
	bindsym Shift+k move up
	bindsym Shift+l move right

	bindsym Shift+Left move left
	bindsym Shift+Down move down
	bindsym Shift+Up move up
	bindsym Shift+Right move right

	#now assigned to tags.
	#bindsym h focus left
	#bindsym j focus down
	#bindsym k focus up
	#bindsym l focus right

	bindsym Left focus left
	bindsym Down focus down
	bindsym Up focus up
	bindsym Right focus right
}



# move window within layout
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


##########
# Layout #
##########

bindsym $mod+f fullscreen

bindsym $mod+Shift+space floating toggle

bindsym $mod+b split h
bindsym $mod+v split v


# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

#resize windows in layout.
mode "resize" {
        bindsym h           resize shrink width 10 px or 10 ppt
        bindsym j           resize grow height 10 px or 10 ppt
        bindsym k           resize shrink height 10 px or 10 ppt
        bindsym l   resize grow width 10 px or 10 ppt

        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

###
# Scratchpad 
######

# bindsym $mod+Shift+minus move scratchpad
# bindsym $mod+minus scratchpad show
#doesn't work on window groups - need to migrate up the tree to the top of the floating.
# bindsym $mod+ctrl+minus	scratchpad show ;  focus floating ; floating disable


#mouse control to move re-arrange windows - doesn't work atm
#bindsym Mod4+button1	exec i3-input -P "test" ; move scratchpad
#bindsym Mod4+ctrl+button2	focus; scratchpad show ;  floating disable

##############
# Workspaces #
##############

set $wsn1 "1: 'net"
set $wsn2 "2: work"
set $wsn3 "3: todo"
set $wsn4 "4: "
set $wsn5 "5: "
set $wsn6 "6: networking"
set $wsn7 "7: "
set $wsn8 "8: "
set $wsn9 "9: "
set $wsn0 "0: 3d"
set $wsnf1 "11: f1: config"
set $wsnf2 "12: f2: std"
set $wsnf3 "13: f3: std"
set $wsnf4 "14: f4: std"
set $wsnf5 "15: f5: std"
set $wsnf6 "16: f6: std"
set $wsnf7 "17: f7: std"
set $wsnf8 "18: f8: std"
set $wsnf9 "19: f9: std"
set $wsnf10 "20: f10: std"
set $wsnf11 "21: f11: std"
set $wsnf12 "22: f12: std"

# switch to workspace
bindsym $mod+1 workspace number $wsn1
bindsym $mod+2 workspace number $wsn2
bindsym $mod+3 workspace number $wsn3
bindsym $mod+4 workspace number $wsn4
bindsym $mod+5 workspace number $wsn5
bindsym $mod+6 workspace number $wsn6
bindsym $mod+7 workspace number $wsn7
bindsym $mod+8 workspace number $wsn8
bindsym $mod+9 workspace number $wsn9
bindsym $mod+0 workspace number $wsn0
bindsym $mod+F1 workspace number $wsnf1
bindsym $mod+F2 workspace number $wsnf2
bindsym $mod+F3 workspace number $wsnf3
bindsym $mod+F4 workspace number $wsnf4
bindsym $mod+F5 workspace number $wsnf5
bindsym $mod+F6 workspace number $wsnf6
bindsym $mod+F7 workspace number $wsnf7
bindsym $mod+F8 workspace number $wsnf8
bindsym $mod+F9 workspace number $wsnf9
bindsym $mod+F10 workspace number $wsnf10
bindsym $mod+F11 workspace number $wsnf11
bindsym $mod+F12 workspace number $wsnf12

# move focused container to workspace
bindsym $mod+shift+F1 move container to workspace number $wsnf1
bindsym $mod+shift+F2 move container to workspace number $wsnf2
bindsym $mod+shift+F3 move container to workspace number $wsnf3
bindsym $mod+shift+F4 move container to workspace number $wsnf4
bindsym $mod+shift+F5 move container to workspace number $wsnf5
bindsym $mod+shift+F6 move container to workspace number $wsnf6
bindsym $mod+shift+F7 move container to workspace number $wsnf7
bindsym $mod+shift+F8 move container to workspace number $wsnf8
bindsym $mod+shift+F9 move container to workspace number $wsnf9
bindsym $mod+shift+F10 move container to workspace number $wsnf10
bindsym $mod+shift+F11 move container to workspace number $wsnf11
bindsym $mod+shift+F12 move container to workspace number $wsnf12
bindsym $mod+shift+1 move container to workspace number $wsn1
bindsym $mod+shift+2 move container to workspace number $wsn2
bindsym $mod+shift+3 move container to workspace number $wsn3
bindsym $mod+shift+4 move container to workspace number $wsn4
bindsym $mod+shift+5 move container to workspace number $wsn5
bindsym $mod+shift+6 move container to workspace number $wsn6
bindsym $mod+shift+7 move container to workspace number $wsn7
bindsym $mod+shift+8 move container to workspace number $wsn8
bindsym $mod+shift+9 move container to workspace number $wsn9
bindsym $mod+shift+0 move container to workspace number $wsn0

bindsym $mod+minus focus output left
bindsym $mod+plus focus output right
bindsym $mod+shift+minus move container to output left; focus output left
bindsym $mod+shift+plus move container to output right; focus output right
bindsym $mod+Control+minus move workspace to output left
bindsym $mod+Control+equal move workspace to output right

bindsym $mod+$cmod+space exec i3-input -F 'rename workspace to "%s"' -P "Enter new workspace name: "


#Ensure there is a way of sending raw key presses by getting all binding out of the way:
#hard to get in to by accident, and toggles out...

bindsym $mod+Control+Shift+Escape mode disableKeys
mode disableKeys {
	bindsym $mod+Control+Shift+Escape mode default
}


exec /home/will/scripts/log_batt.sh
